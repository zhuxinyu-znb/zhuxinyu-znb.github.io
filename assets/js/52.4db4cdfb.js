(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{257:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"flex布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex布局"}},[t._v("#")]),t._v(" flex布局")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/qcloud1001/archive/2018/10/25/9848619.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("本文转自"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"一、flex弹性盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、flex弹性盒模型"}},[t._v("#")]),t._v(" 一、flex弹性盒模型")]),t._v(" "),a("p",[t._v("对于某个元素只要声明了"),a("code",[t._v("display: flex;")]),t._v("，那么这个元素就成为了弹性容器，具有flex弹性布局的特性。")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191118-flex1.png",alt:"flex"}})]),t._v(" "),a("ol",[a("li",[t._v("每个弹性容器都有两根轴：主轴和交叉轴，两轴之间成90度关系。注意：水平的不一定就是主轴。")]),t._v(" "),a("li",[t._v("每根轴都有起点和终点，这对于元素的对齐非常重要。")]),t._v(" "),a("li",[t._v("弹性容器中的所有子元素称为<弹性元素>，弹性元素永远沿主轴排列。")]),t._v(" "),a("li",[t._v("弹性元素也可以通过display:flex设置为另一个弹性容器，形成嵌套关系。因此一个元素既可以是弹性容器也可以是弹性元素。")])]),t._v(" "),a("p",[t._v("弹性容器的两根轴非常重要，所有属性都是作用于轴的。下面从轴入手，将所有flex布局属性串起来理解。")]),t._v(" "),a("h2",{attrs:{id:"二、主轴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、主轴"}},[t._v("#")]),t._v(" 二、主轴")]),t._v(" "),a("p",[t._v("flex布局是一种一维布局模型，一次只能处理一个维度（一行或者一列）上的元素布局，作为对比的是二维布局CSS Grid Layout，可以同时处理行和列上的布局。")]),t._v(" "),a("p",[t._v("也就是说，"),a("strong",[t._v("flex布局大部分的属性都是作用于主轴的，在交叉轴上很多时候只能被动地变化。")])]),t._v(" "),a("h3",{attrs:{id:"_1-主轴的方向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-主轴的方向"}},[t._v("#")]),t._v(" 1. 主轴的方向")]),t._v(" "),a("p",[t._v("我们可以在弹性容器上通过 "),a("code",[t._v("flex-direction")]),t._v(" 修改主轴的方向。如果主轴方向修改了，那么：")]),t._v(" "),a("ol",[a("li",[t._v("交叉轴就会相应地旋转90度。")]),t._v(" "),a("li",[t._v("弹性元素的排列方式也会发生改变，因为弹性元素永远沿主轴排列。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"20191118-flex2.gif",alt:"flex"}})]),t._v(" "),a("p",[t._v("flex-direction:row")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191118-flex3.gif",alt:"flex"}})]),t._v(" "),a("p",[t._v("flex-direction:column")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191118-flex4.gif",alt:"flex"}})]),t._v(" "),a("p",[t._v("flex-direction:row-reverse")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191118-flex5.gif",alt:"flex"}})]),t._v(" "),a("p",[t._v("flex-direction:column-reverse")]),t._v(" "),a("h3",{attrs:{id:"_2-沿主轴的排列处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-沿主轴的排列处理"}},[t._v("#")]),t._v(" 2. 沿主轴的排列处理")]),t._v(" "),a("p",[t._v("弹性元素永远沿主轴排列，那么如果主轴排不下，该如何处理？")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191118-flex6.jpeg",alt:"flex"}})]),t._v(" "),a("p",[t._v("通过设置"),a("code",[t._v("flex-wrap: nowrap | wrap | wrap-reverse")]),t._v("可使得主轴上的元素不折行、折行、反向折行。")]),t._v(" "),a("p",[t._v("默认是"),a("code",[t._v("nowrap")]),t._v("不折行，难道任由元素直接溢出容器吗？当然不会，那么这里就涉及到元素的弹性伸缩应对，下面会讲到。")]),t._v(" "),a("p",[a("code",[t._v("wrap")]),t._v("折行，顾名思义就是另起一行，那么折行之后行与行之间的间距（对齐）怎样调整？这里又涉及到交叉轴上的多行对齐。")]),t._v(" "),a("p",[a("code",[t._v("wrap-reverse")]),t._v("反向折行，是从容器底部开始的折行，但每行元素之间的排列仍保留正向。")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191118-flex7.jpeg",alt:"flex"}})]),t._v(" "),a("h3",{attrs:{id:"_3-一个复合属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-一个复合属性"}},[t._v("#")]),t._v(" 3. 一个复合属性")]),t._v(" "),a("p",[a("code",[t._v("flex-flow = flex-drection + flex-wrap")])]),t._v(" "),a("p",[a("code",[t._v("flex-flow")]),t._v("相当于规定了flex布局的“工作流(flow)”")]),t._v(" "),a("p",[a("code",[t._v("flex-flow: row nowrap;")])]),t._v(" "),a("h2",{attrs:{id:"三、元素如何弹性伸缩应对"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、元素如何弹性伸缩应对"}},[t._v("#")]),t._v(" 三、元素如何弹性伸缩应对")]),t._v(" "),a("p",[t._v("当"),a("code",[t._v("flex-wrap: nowrap;")]),t._v("不折行时，容器宽度有剩余/不够分，弹性元素们该怎么“弹性”地伸缩应对？")]),t._v(" "),a("p",[t._v("这里针对上面两种场景，引入两个属性(需应用在弹性元素上)")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("flex-shrink")]),t._v("：缩小比例（容器宽度<元素总宽度时如何收缩）")]),t._v(" "),a("li",[a("code",[t._v("flex-grow")]),t._v("：放大比例（容器宽度>元素总宽度时如何伸展）")])]),t._v(" "),a("h3",{attrs:{id:"_1-flex-shrink-缩小比例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-flex-shrink-缩小比例"}},[t._v("#")]),t._v(" 1. flex-shrink: 缩小比例")]),t._v(" "),a("p",[t._v("来看下以下场景，弹性容器"),a("code",[t._v("#container")]),t._v("宽度是200px，一共有三个弹性元素，宽度分别是50px、100px、120px。在不折行的情况下，此时容器宽度是明显不够分配的。")]),t._v(" "),a("p",[t._v("实际上，"),a("code",[t._v("flex-shrink")]),t._v("默认为1，也就是当不够分配时，元素都将等比例缩小，占满整个宽度，如下图。")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex1.jpeg",alt:"flex"}})]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("strong",[t._v("元素收缩的计算方法")])]),t._v(" "),a("p",[t._v("真的是等比缩小(每个元素各减去70/3的宽度)吗？这里稍微深究一下它的收缩计算方法。")]),t._v(" "),a("ol",[a("li",[t._v("弹性元素1：50px→37.03px")]),t._v(" "),a("li",[t._v("弹性元素2：100px→74.08px")]),t._v(" "),a("li",[t._v("弹性元素3：120px→88.89px")])]),t._v(" "),a("p",[t._v("先抛结论："),a("code",[t._v("flex-shrink: 1")]),t._v("并非严格等比缩小，"),a("strong",[t._v("它还会考虑弹性元素本身的大小")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("容器剩余宽度："),a("code",[t._v("-70px")])]),t._v(" "),a("li",[t._v("缩小因子的分母："),a("code",[t._v("1*50 + 1*100 + 1*120 = 270 (1为各元素flex-shrink的值)")])]),t._v(" "),a("li",[t._v("元素1的缩小因子："),a("code",[t._v("1*50/270")])]),t._v(" "),a("li",[t._v("元素1的缩小宽度为缩小因子乘于容器剩余宽度："),a("code",[t._v("1*50/270 * (-70)")])]),t._v(" "),a("li",[t._v("元素1最后则缩小为："),a("code",[t._v("50px + (1*50/270 *(-70)) = 37.03px")])])]),t._v(" "),a("p",[t._v("加入弹性元素本身大小作为计算方法的考虑因素，主要是为了避免将一些本身宽度较小的元素在收缩之后宽度变为0的情况出现。")]),t._v(" "),a("h3",{attrs:{id:"_2-flex-grow-放大比例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-flex-grow-放大比例"}},[t._v("#")]),t._v(" 2. flex-grow: 放大比例")]),t._v(" "),a("p",[t._v("同样，弹性容器"),a("code",[t._v("#container")]),t._v("宽度是200px，但此时只有两个弹性元素，宽度分别是50px、100px。此时容器宽度是有剩余的。")]),t._v(" "),a("p",[t._v("那么剩余的宽度该怎样分配？而"),a("code",[t._v("flex-grow")]),t._v("则决定了要不要分配以及各个分配多少。")]),t._v(" "),a("p",[t._v("（1）在flex布局中，容器剩余宽度默认是不进行分配的，也就是所有弹性元素的"),a("code",[t._v("flex-grow")]),t._v("都为0。")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex2.jpeg",alt:"flex"}})]),t._v(" "),a("p",[t._v("（2）通过指定"),a("code",[t._v("flex-grow")]),t._v("为大于零的值，实现容器剩余宽度的分配比例设置。")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex3.jpeg",alt:"flex"}})]),t._v(" "),a("p",[a("strong",[t._v("元素放大的计算方法")])]),t._v(" "),a("p",[t._v("放大的计算方法并没有与缩小一样，将元素大小纳入考虑。")]),t._v(" "),a("p",[t._v("仅仅按"),a("code",[t._v("flex-grow")]),t._v("声明的份数算出每个需分配多少，叠加到原来的尺寸上。")]),t._v(" "),a("ul",[a("li",[t._v("容器剩余宽度："),a("code",[t._v("50px")])]),t._v(" "),a("li",[t._v("分成每份："),a("code",[t._v("50px / (3+2) = 10px")])]),t._v(" "),a("li",[t._v("元素1放大为："),a("code",[t._v("50px + 3 * 10 = 80px")])])]),t._v(" "),a("p",[a("strong",[t._v("无多余宽度时，flex-grow无效")])]),t._v(" "),a("p",[t._v("下图中，弹性容器的宽度正好等于元素宽度总和，无多余宽度，此时无论flex-grow是什么值都不会生效。")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex4.jpeg",alt:"flex"}})]),t._v(" "),a("p",[t._v("同理，对于"),a("code",[t._v("flex-shrink")]),t._v("，在容器宽度有剩余时也是不会生效的。因此这两个属性是针对两种不同场景的互斥属性。")]),t._v(" "),a("h2",{attrs:{id:"四、弹性处理与刚性尺寸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、弹性处理与刚性尺寸"}},[t._v("#")]),t._v(" 四、弹性处理与刚性尺寸")]),t._v(" "),a("p",[t._v("在进行弹性处理之余，其实有些场景我们更希望元素尺寸固定，不需要进行弹性调整。设置元素尺寸除了width和height以外，flex还提供了一个"),a("code",[t._v("flex-basis")]),t._v("属性。")]),t._v(" "),a("p",[a("code",[t._v("flex-basis")]),t._v("设置的是元素在主轴上的初始尺寸，所谓的初始尺寸就是元素在"),a("code",[t._v("flex-grow")]),t._v("和"),a("code",[t._v("flex-shrink")]),t._v("生效前的尺寸。")]),t._v(" "),a("h3",{attrs:{id:"_1-与width-height的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-与width-height的区别"}},[t._v("#")]),t._v(" 1. 与width/height的区别")]),t._v(" "),a("p",[t._v("首先以width为例进行比较。看下下面的例子。"),a("code",[t._v("#container {display:flex;}")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("11111"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("22222"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("strong",[t._v("(1) 两者都为0")])]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex5.jpeg",alt:"flex"}})]),t._v(" "),a("ul",[a("li",[t._v("width: 0 —— 完全没显示")]),t._v(" "),a("li",[t._v("flex-basis: 0 —— 根据内容撑开宽度")])]),t._v(" "),a("p",[a("strong",[t._v("(2) 两者非0")])]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex6.jpeg",alt:"flex"}})]),t._v(" "),a("ul",[a("li",[t._v("width: 非0;")]),t._v(" "),a("li",[t._v("flex-basis: 非0\n—— 数值相同时两者等效")])]),t._v(" "),a("p",[t._v("—— 同时设置，flex-basis优先级高")]),t._v(" "),a("p",[a("strong",[t._v("(3) flex-basis为auto")])]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex7.jpeg",alt:"flex"}})]),t._v(" "),a("p",[t._v("flex-basis为auto时，如设置了width则元素尺寸由width决定；没有设置则由内容决定")]),t._v(" "),a("p",[a("strong",[t._v("(4) flex-basis == 主轴上的尺寸 != width")])]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex8.jpeg",alt:"flex"}})]),t._v(" "),a("ul",[a("li",[t._v("将主轴方向改为：上→下")]),t._v(" "),a("li",[t._v("此时主轴上的尺寸是元素的height")]),t._v(" "),a("li",[t._v("flex-basis == height")])]),t._v(" "),a("h3",{attrs:{id:"_2-常用的复合属性-flex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-常用的复合属性-flex"}},[t._v("#")]),t._v(" 2. 常用的复合属性 flex")]),t._v(" "),a("p",[t._v("这个属性应该是最容易迷糊的一个，下面揭开它的真面目。")]),t._v(" "),a("p",[t._v("flex = flex-grow + flex-shrink + flex-basis")]),t._v(" "),a("p",[t._v("复合属性，前面说的三个属性的简写。")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex9.jpeg",alt:"flex"}})]),t._v(" "),a("p",[t._v("一些简写")]),t._v(" "),a("ul",[a("li",[t._v("flex: 1 = flex: 1 1 0%")]),t._v(" "),a("li",[t._v("flex: 2 = flex: 2 1 0%")]),t._v(" "),a("li",[t._v("flex: auto = flex: 1 1 auto;")]),t._v(" "),a("li",[t._v("flex: none = flex: 0 0 auto; // 常用于固定尺寸 不伸缩")])]),t._v(" "),a("p",[a("strong",[t._v("flex:1 和 flex:auto 的区别")])]),t._v(" "),a("p",[t._v("其实可以归结于"),a("code",[t._v("flex-basis:0")]),t._v("和"),a("code",[t._v("flex-basis:auto")]),t._v("的区别。")]),t._v(" "),a("p",[a("code",[t._v("flex-basis")]),t._v("是指定初始尺寸，当设置为0时（绝对弹性元素），此时相当于告诉"),a("code",[t._v("flex-grow")]),t._v("和"),a("code",[t._v("flex-shrink")]),t._v("在伸缩的时候不需要考虑我的尺寸；相反当设置为"),a("code",[t._v("auto")]),t._v("时（相对弹性元素），此时则需要在伸缩时将元素尺寸纳入考虑。")]),t._v(" "),a("p",[t._v("因此从下图（转自W3C）可以看到绝对弹性元素如果"),a("code",[t._v("flex-grow")]),t._v("值是一样的话，那么他们的尺寸一定是一样的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex10.jpeg",alt:"flex"}})]),t._v(" "),a("h2",{attrs:{id:"五、容器内如何对齐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、容器内如何对齐"}},[t._v("#")]),t._v(" 五、容器内如何对齐")]),t._v(" "),a("p",[t._v("前面讲完了元素大小关系之后，下面是另外一个重要议题——如何对齐。可以发现上面的所有属性都是围绕主轴进行设置的，但在对齐方面则不得不加入作用于交叉轴上。需要注意的是这些对齐属性都是作用于容器上。")]),t._v(" "),a("h3",{attrs:{id:"_1-主轴上的对齐方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-主轴上的对齐方式"}},[t._v("#")]),t._v(" 1. 主轴上的对齐方式")]),t._v(" "),a("p",[a("strong",[t._v("justify-content")])]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex11.jpeg",alt:"flex"}})]),t._v(" "),a("h3",{attrs:{id:"_2-交叉轴上的对齐方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-交叉轴上的对齐方式"}},[t._v("#")]),t._v(" 2. 交叉轴上的对齐方式")]),t._v(" "),a("p",[t._v("主轴上比较好理解，重点是交叉轴上。因为交叉轴上存在单行和多行两种情况。")]),t._v(" "),a("p",[a("strong",[t._v("交叉轴上的单行对齐")])]),t._v(" "),a("p",[a("strong",[t._v("align-items")])]),t._v(" "),a("p",[t._v("默认值是"),a("code",[t._v("stretch")]),t._v("，当元素没有设置具体尺寸时会将容器在交叉轴方向撑满。")]),t._v(" "),a("p",[t._v("当"),a("code",[t._v("align-items")]),t._v("不为"),a("code",[t._v("stretch")]),t._v("时，此时除了对齐方式会改变之外，元素在交叉轴方向上的尺寸将由内容或自身尺寸（宽高）决定。")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex12.jpeg",alt:"flex"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex13.jpeg",alt:"flex"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex14.jpeg",alt:"flex"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex15.jpeg",alt:"flex"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex16.jpeg",alt:"flex"}})]),t._v(" "),a("p",[t._v("注意，交叉轴不一定是从上往下，这点再次强调也不为过。")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex17.jpeg",alt:"flex"}})]),t._v(" "),a("p",[a("strong",[t._v("交叉轴上的多行对齐")])]),t._v(" "),a("p",[t._v("还记得可以通过"),a("code",[t._v("flex-wrap: wrap")]),t._v("使得元素在一行放不下时进行换行。在这种场景下就会在交叉轴上出现多行，多行情况下，flex布局提供了"),a("code",[t._v("align-content")]),t._v("属性设置对齐。")]),t._v(" "),a("p",[a("code",[t._v("align-content")]),t._v("与"),a("code",[t._v("align-items")]),t._v("比较类似，同时也比较容易迷糊。下面会将两者对比着来看它们的异同。")]),t._v(" "),a("p",[t._v("首先明确一点："),a("code",[t._v("align-content")]),t._v("只对多行元素有效，会以多行作为整体进行对齐，容器必须开启换行。")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" stretch | flex-start | flex-end | center | space-between | space-around\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" stretch | flex-start | flex-end | center | baseline\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"20191119-flex18.jpeg",alt:"flex"}})]),t._v(" "),a("p",[t._v("当我们将"),a("code",[t._v("align-items")]),t._v("改为"),a("code",[t._v("flex-start")]),t._v("或者给弹性元素设置一个具体高度，此时效果是行与行之间形成了间距。")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*或者*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container > div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("为什么？因为"),a("code",[t._v("align-content")]),t._v("会以整行为单位，此时会将整行进行拉伸占满交叉轴；而"),a("code",[t._v("align-items")]),t._v("设置了高度或者顶对齐，在不能用高度进行拉伸的情况下，选择了用间距。")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex19.jpeg",alt:"flex"}})]),t._v(" "),a("p",[t._v("尝试把"),a("code",[t._v("align-content")]),t._v("设置为顶对齐，此时以行为单位，整体高度通过内容撑开。")]),t._v(" "),a("p",[t._v("而"),a("code",[t._v("align-items")]),t._v("仅仅管一行，因此在只有第一个元素设置了高度的情况下，第一行的其他元素遵循"),a("code",[t._v("align-items: stretch")]),t._v("也被拉伸到了50px。而第二行则保持高度不变。")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container > div:first-child")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[a("img",{attrs:{src:"20191119-flex20.jpeg",alt:"flex"}})]),t._v(" "),a("p",[t._v("两者的区别还是不明显？来看下面这个例子。")]),t._v(" "),a("p",[t._v("这里仅对第二个元素的高度进行设置，其他元素高度则仍保持内容撑开。")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex21.jpeg",alt:"flex"}})]),t._v(" "),a("p",[t._v("以第一个图为例，会发现"),a("code",[t._v("align-content")]),t._v("会将所有行进行顶对齐，然后第一行由于第二个元素设置了较高的高度，因此体现出了底对齐。")]),t._v(" "),a("p",[t._v("两者差异总结：")]),t._v(" "),a("ul",[a("li",[t._v("两者“作用域”不同")]),t._v(" "),a("li",[t._v("align-content管全局(所有行视为整体)")]),t._v(" "),a("li",[t._v("align-items管单行")])]),t._v(" "),a("p",[a("strong",[t._v("能否更灵活地设置交叉轴对齐")])]),t._v(" "),a("p",[t._v("除了在容器上设置交叉轴对齐，还可以通过"),a("code",[t._v("align-self")]),t._v("单独对某个元素设置交叉轴对齐方式。")]),t._v(" "),a("ol",[a("li",[t._v("值与"),a("code",[t._v("align-items")]),t._v("相同")]),t._v(" "),a("li",[t._v("可覆盖容器的"),a("code",[t._v("align-items")]),t._v("属性")]),t._v(" "),a("li",[t._v("默认值为"),a("code",[t._v("auto")]),t._v("，表示继承父元素的"),a("code",[t._v("align-items")]),t._v("属性")])]),t._v(" "),a("p",[a("img",{attrs:{src:"20191119-flex22.jpeg",alt:"flex"}})]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container > div:first-child")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container > div:nth-child(3)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container > div:nth-child(4)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("h2",{attrs:{id:"六、其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、其他"}},[t._v("#")]),t._v(" 六、其他")]),t._v(" "),a("h3",{attrs:{id:"order：更优雅地调整元素顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order：更优雅地调整元素顺序"}},[t._v("#")]),t._v(" order：更优雅地调整元素顺序")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191120-flex1.jpg",alt:"flex"}})]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container > div:first-child")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container > div:nth-child(2)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container > div:nth-child(3)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container > div:nth-child(4)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("order：可设置元素之间的排列顺序")]),t._v(" "),a("ol",[a("li",[t._v("数值越小，越靠前，默认为0")]),t._v(" "),a("li",[t._v("值相同时，以dom中元素排列为准")])]),t._v(" "),a("h2",{attrs:{id:"七、总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、总结"}},[t._v("#")]),t._v(" 七、总结")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191120-flex2.jpg",alt:"flex"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"20191120-flex3.jpg",alt:"flex"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"20191120-flex4.jpg",alt:"flex"}})]),t._v(" "),a("p",[t._v("附\n参考阮老师博文中的骰子练习，我做了张图，大家不妨可以各自实现下，理解之后应该能够比较轻松地写出来")]),t._v(" "),a("p",[a("img",{attrs:{src:"20191120-flex5.jpg",alt:"flex"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);