(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{252:function(s,a,t){"use strict";t.r(a);var e=t(0),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"微服务入门与docker实战"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微服务入门与docker实战"}},[s._v("#")]),s._v(" 微服务入门与Docker实战")]),s._v(" "),t("h2",{attrs:{id:"docker入门与实战"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker入门与实战"}},[s._v("#")]),s._v(" Docker入门与实战")]),s._v(" "),t("h3",{attrs:{id:"微服务的核心思想"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微服务的核心思想"}},[s._v("#")]),s._v(" 微服务的核心思想")]),s._v(" "),t("h4",{attrs:{id:"微服务到底是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微服务到底是什么"}},[s._v("#")]),s._v(" 微服务到底是什么")]),s._v(" "),t("ul",[t("li",[s._v("微服务属于架构层面的"),t("strong",[s._v("设计模式")])]),s._v(" "),t("li",[s._v("微服务的设计概念以"),t("strong",[s._v("业务功能")]),s._v("为主")]),s._v(" "),t("li",[s._v("微服务"),t("strong",[s._v("独立提供")]),s._v("对应的业务功能")]),s._v(" "),t("li",[s._v("微服务不拘泥于具体的实现语言")]),s._v(" "),t("li",[s._v("微服务架构 ≈ 模块化开发 + 分布式计算")])]),s._v(" "),t("h4",{attrs:{id:"总览微服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总览微服务"}},[s._v("#")]),s._v(" 总览微服务")]),s._v(" "),t("p",[s._v("旧模式下，所有业务都在一个系统内，连同一个数据库")]),s._v(" "),t("p",[t("img",{attrs:{src:"20191114-docker1.png",alt:"图"}})]),s._v(" "),t("p",[s._v("微服务下，按业务分开，不同的业务对应不同的数据库，把一个大活分开成多个小活")]),s._v(" "),t("p",[t("img",{attrs:{src:"20191114-docker2.png",alt:"图"}})]),s._v(" "),t("h4",{attrs:{id:"微服务的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微服务的特点"}},[s._v("#")]),s._v(" 微服务的特点")]),s._v(" "),t("ul",[t("li",[s._v("小, 且专注于做⼀件事情")]),s._v(" "),t("li",[s._v("处于"),t("strong",[s._v("独立的进程")]),s._v("中")]),s._v(" "),t("li",[s._v("轻量级的通信机制")]),s._v(" "),t("li",[s._v("松耦合、独立部署")])]),s._v(" "),t("h4",{attrs:{id:"合理使用微服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合理使用微服务"}},[s._v("#")]),s._v(" 合理使用微服务")]),s._v(" "),t("ul",[t("li",[s._v("业务复杂度高")]),s._v(" "),t("li",[s._v("团队规模大")]),s._v(" "),t("li",[s._v("业务需要长期演进")]),s._v(" "),t("li",[s._v("最后——没有银弹")])]),s._v(" "),t("h4",{attrs:{id:"微服务——集成与部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微服务——集成与部署"}},[s._v("#")]),s._v(" 微服务——集成与部署")]),s._v(" "),t("ul",[t("li",[s._v("持续集成——jekins")]),s._v(" "),t("li",[s._v("虚拟化——虚拟机")]),s._v(" "),t("li",[s._v("容器——Docker")])]),s._v(" "),t("h3",{attrs:{id:"docker-vs-vm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-vs-vm"}},[s._v("#")]),s._v(" Docker vs VM")]),s._v(" "),t("h4",{attrs:{id:"docker简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker简介"}},[s._v("#")]),s._v(" Docker简介")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Docker是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、 自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中 部署，包括VMs（虚拟机）、bare metal、OpenStack 集群和其他的基础应用平台。")])]),s._v(" "),t("li",[t("p",[s._v("Docker通常用于如下场景：")]),s._v(" "),t("ul",[t("li",[s._v("web应用的自动化打包和发布；")]),s._v(" "),t("li",[s._v("自动化测试和持续集成、发布；")]),s._v(" "),t("li",[s._v("在服务型环境中部署和调整数据库或其他的后台应用；")]),s._v(" "),t("li",[s._v("从头编译或者扩展现有的OpenShift或Cloud Foundry平台来搭建自己的PaaS环境。")])])])]),s._v(" "),t("h4",{attrs:{id:"docker-vs-vm-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-vs-vm-2"}},[s._v("#")]),s._v(" Docker vs VM")]),s._v(" "),t("ul",[t("li",[s._v("VM：\n"),t("ul",[t("li",[s._v("运行在宿主机之上的完整的操作系统 运行自身操作系统会占用较多的资源")])])])]),s._v(" "),t("p",[t("img",{attrs:{src:"20191114-docker4.jpg",alt:"图"}})]),s._v(" "),t("ul",[t("li",[s._v("Docker：\n"),t("ul",[t("li",[s._v("Docker更加轻量高效")]),s._v(" "),t("li",[s._v("对系统资源的利用率很高")]),s._v(" "),t("li",[s._v("比虚拟机技术更为轻便、快捷")]),s._v(" "),t("li",[t("strong",[s._v("隔离效果不如VM")]),s._v("，如图所示，如果一个应用把系统搞崩了，其他应用也就废废了。")])])])]),s._v(" "),t("p",[t("img",{attrs:{src:"20191114-docker3.jpg",alt:"图"}})]),s._v(" "),t("h4",{attrs:{id:"docker的相关概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker的相关概念"}},[s._v("#")]),s._v(" Docker的相关概念")]),s._v(" "),t("ul",[t("li",[s._v("Docker是CS架构，主要有两个概念：")]),s._v(" "),t("li",[s._v("Docker daemon:\n"),t("ul",[t("li",[s._v("运行在宿主机上")]),s._v(" "),t("li",[s._v("Docker守护进程")]),s._v(" "),t("li",[s._v("用户通过Docker client(Docker命令)与Docker daemon交互")])])]),s._v(" "),t("li",[s._v("Docker client:\n"),t("ul",[t("li",[s._v("Docker 命令行工具，是用户使用Docker的主要方式")]),s._v(" "),t("li",[s._v("Docker client与Docker daemon通信并将结果返回给用户")]),s._v(" "),t("li",[s._v("Docker client也可以通过socket或者RESTful api访问远程的 Docker daemon")])])])]),s._v(" "),t("h3",{attrs:{id:"安装与hello-world"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装与hello-world"}},[s._v("#")]),s._v(" 安装与Hello world")]),s._v(" "),t("h3",{attrs:{id:"实战：打包一个web服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实战：打包一个web服务器"}},[s._v("#")]),s._v(" 实战：打包一个WEB服务器")]),s._v(" "),t("h4",{attrs:{id:"初始化一个nodejs程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化一个nodejs程序"}},[s._v("#")]),s._v(" 初始化一个nodejs程序")]),s._v(" "),t("p",[s._v("首先创建一个空文件夹，并创建一下文件")]),s._v(" "),t("ul",[t("li",[s._v("server.js")]),s._v(" "),t("li",[s._v("package.json")]),s._v(" "),t("li",[s._v("Dockerfile")]),s._v(" "),t("li",[s._v(".dockerignore")])]),s._v(" "),t("p",[s._v("server.js")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" Koa "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'koa'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" app "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Koa")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\napp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("use")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("ctx")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("body "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello docker'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\napp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("listen")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3232")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v(".dockerignore")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# Logs \nlogs \n*.log \nnpm-debug.log*\n\n# Runtime data \npids \n*.pid \n*.seed\n# Directory for instrumented libs generated by jscoverage/JSCover \nlib-cov\n# Coverage directory used by tools like istanbul\ncoverage\n# nyc test coverage \n.nyc_output\n# Grunt intermediate storage (http://gruntjs.com/creatingplugins#storing-task-files) \n.grunt\n# node-waf configuration \n.lock-wscript\n# Compiled binary addons (http://nodejs.org/api/addons.html) \nbuild/Release\n# Dependency directories \nnode_modules \njspm_packages\n# Optional npm cache directory \n.npm\n# Optional REPL history \n.node_repl_history \n.idea \n.node_modules \nnode_modules \n.vscode\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("p",[s._v("文件在放到docker之前先测试好。")]),s._v(" "),t("h4",{attrs:{id:"创建-dockerfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建-dockerfile"}},[s._v("#")]),s._v(" 创建 Dockerfile")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('# 制定node镜像的版本\nFROM node:8.9-alpine \n# 声明作者\nMAINTAINER evilboy \n# 移动当前目录下面的文件到app目录下\nADD . /app/ \n# 进入到app目录下面，类似cd\nWORKDIR /app \n# 安装依赖\nRUN npm install \n# 对外暴露的端口\nEXPOSE 3000 \n# 程序启动脚本\nCMD ["npm", "start"]\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h4",{attrs:{id:"构建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建镜像"}},[s._v("#")]),s._v(" 构建镜像")]),s._v(" "),t("p",[t("img",{attrs:{src:"20191114-docker1.jpg",alt:"DOCKER"}})]),s._v(" "),t("p",[s._v("等待镜像构造完成，然后使用 images 命令查看镜像")]),s._v(" "),t("p",[t("img",{attrs:{src:"20191114-docker2.jpg",alt:"DOCKER"}})]),s._v(" "),t("p",[s._v("此时看到images已经构造完成，现在开始启动images并测试")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("#启动镜像 -d表示后台执行，-p 9000:3000表示制定本地的9000端口隐射到容器内的3000端口，docker_demo是镜像名称\ndocker run -d -p 9000:3000 docker_demo\n#查看容器\ndocker ps\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"k8s-kubernetes-入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s-kubernetes-入门"}},[s._v("#")]),s._v(" K8S(Kubernetes)入门")]),s._v(" "),t("h3",{attrs:{id:"什么是k8s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是k8s"}},[s._v("#")]),s._v(" 什么是K8s")]),s._v(" "),t("ul",[t("li",[s._v("Kubernetes，因为首尾字母中间有8个字符，所以被简写成 K8s。")]),s._v(" "),t("li",[s._v("K8s 是底层资源与容器间的一个抽象层，如果和单机架构类比，可以算 作是一个分布式时代的 Linux。")]),s._v(" "),t("li",[s._v("K8s 是 Google 开源的容器集群管理系统。在 Docker 技术的基础上，为 容器化的应用提供部署运行、资源调度、服务发现和动态伸缩等一系列 完整功能，提高了大规模容器集群管理的便捷性。")])]),s._v(" "),t("h3",{attrs:{id:"k8s的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s的特点"}},[s._v("#")]),s._v(" K8S的特点")]),s._v(" "),t("ul",[t("li",[s._v("k8s是一个管理容器的工具，也是"),t("strong",[s._v("管理应用整个生命周期的一个工具， 从创建应用，应用的部署，应用提供服务，扩容缩容应用，应用更新")]),s._v("， 而且可以做到故障自愈。")]),s._v(" "),t("li",[s._v("可移植：支持公有云，私有云，混合云；")]),s._v(" "),t("li",[s._v("可扩展：模块化，热插拨，可组合；")]),s._v(" "),t("li",[s._v("自愈：自动替换，自动重启，自动复制，自动扩展。")])]),s._v(" "),t("h3",{attrs:{id:"k8s的管理步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s的管理步骤"}},[s._v("#")]),s._v(" K8S的管理步骤")]),s._v(" "),t("p",[s._v("在k8s进行管理应用的时候，基本步骤是：")]),s._v(" "),t("ul",[t("li",[s._v("创建集群")]),s._v(" "),t("li",[s._v("部署应用")]),s._v(" "),t("li",[s._v("发布应用")]),s._v(" "),t("li",[s._v("扩展应用")]),s._v(" "),t("li",[s._v("更新应用")])]),s._v(" "),t("h3",{attrs:{id:"k8s的架构结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s的架构结构"}},[s._v("#")]),s._v(" K8S的架构结构")]),s._v(" "),t("ul",[t("li",[s._v("生态系统")]),s._v(" "),t("li",[s._v("接口层")]),s._v(" "),t("li",[s._v("管理层")]),s._v(" "),t("li",[s._v("应用层")]),s._v(" "),t("li",[s._v("核心层")])]),s._v(" "),t("p",[t("img",{attrs:{src:"20191115-docker1.png",alt:"DOCKER"}})]),s._v(" "),t("h3",{attrs:{id:"相关概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关概念"}},[s._v("#")]),s._v(" 相关概念")]),s._v(" "),t("ul",[t("li",[s._v("主机（Master）：用于控制 Kubernetes 节点的计算机。所有任务分配都来自于此。")]),s._v(" "),t("li",[s._v("节点（Node）：执行请求和分配任务的计算机。由 Kubernetes 主机负责对节点进行控制。")]),s._v(" "),t("li",[s._v("容器集（Pod）：部署在单个节点上的，且包含一个或多个容器的容器组。同一容器集中的所有容器共 享同一个 IP 地址、IPC、主机名称及其它资源。容器集会将网络和存储从底层容器中抽象出来。这样， 您就能更加轻松地在集群中移动容器。")]),s._v(" "),t("li",[s._v("复制控制器（Replication controller）： 用于控制应在集群某处运行的完全相同的容器集副本数量。")]),s._v(" "),t("li",[s._v("服务（Service）：服务可将工作定义与容器集分离。Kubernetes 服务代理会自动将服务请求分配到正 确的容器集——无论这个容器集会移到集群中的哪个位置，即使它已被替换。")]),s._v(" "),t("li",[s._v("Kubelet： 这是一个在节点上运行的服务，可读取容器清单，确保指定的容器启动并运行。")]),s._v(" "),t("li",[s._v("kubectl： Kubernetes 的命令行配置工具。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"20191115-docker2.jpg",alt:"DOCKER"}})]),s._v(" "),t("h3",{attrs:{id:"安装k8s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装k8s"}},[s._v("#")]),s._v(" 安装K8S")]),s._v(" "),t("p",[s._v("(把防火墙关闭，还有SELinux关闭)")]),s._v(" "),t("ul",[t("li",[s._v("在Linux下安装单机版的集群环境")]),s._v(" "),t("li",[s._v("以root身份执行以下操作：\n"),t("ol",[t("li",[s._v("关闭Linux防火墙\n"),t("ul",[t("li",[s._v("systemctl stop firewalld")]),s._v(" "),t("li",[s._v("systemctl disable firewalld")])])]),s._v(" "),t("li",[s._v("安装Kubernetes和依赖组件etcd\n"),t("ul",[t("li",[s._v("yum install -y etcd kubernetes")])])]),s._v(" "),t("li",[s._v("修改配置\n"),t("ul",[t("li",[s._v("Docker配置文件/etc/sysconfig/docker, OPTIONS=‘-selinux-enabled=false --insecure-registry gcr.io'")]),s._v(" "),t("li",[s._v("Kubernetes apiservce配置文件/etc/kubernetes/apiserver, 把--admission-control参数中的ServiceAccount删除")])])]),s._v(" "),t("li",[s._v("按顺序启动所有服务\n"),t("ul",[t("li",[s._v("systemctl start etcd")]),s._v(" "),t("li",[s._v("systemctl start docker")]),s._v(" "),t("li",[s._v("systemctl start kube-apiserver")]),s._v(" "),t("li",[s._v("systemctl start kube-controller-manager")]),s._v(" "),t("li",[s._v("systemctl start kube-scheduler")]),s._v(" "),t("li",[s._v("systemctl start kubelet")]),s._v(" "),t("li",[s._v("systemctl start kube-proxy")])])])])])]),s._v(" "),t("h3",{attrs:{id:"k8s相关资源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s相关资源"}},[s._v("#")]),s._v(" K8S相关资源")]),s._v(" "),t("ol",[t("li",[t("p",[t("a",{attrs:{href:"https://kubernetes.io",target:"_blank",rel:"noopener noreferrer"}},[s._v("官网"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://hub.kubeapps.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Chart 应用仓库"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.kubernetes.org.cn/docs",target:"_blank",rel:"noopener noreferrer"}},[s._v("中文手册"),t("OutboundLink")],1)])])])])}),[],!1,null,null,null);a.default=r.exports}}]);