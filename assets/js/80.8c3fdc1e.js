(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{280:function(s,t,a){"use strict";a.r(t);var n=a(0),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"神经网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#神经网络"}},[s._v("#")]),s._v(" 神经网络")]),s._v(" "),a("h2",{attrs:{id:"神经网络-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#神经网络-2"}},[s._v("#")]),s._v(" 神经网络")]),s._v(" "),a("ul",[a("li",[s._v("每个神经元里存储着若干权重（weight）、偏置（bias）和一个激活函数（activation）")]),s._v(" "),a("li",[s._v("输入乘上权重加上偏置，经过激活函数得到输出")]),s._v(" "),a("li",[s._v("激活函数用于添加一些非线性变换")]),s._v(" "),a("li",[s._v("神经网络通常包括一个输入层、若干隐藏层、一个输出层")]),s._v(" "),a("li",[s._v("输入层通常不用于计算神经网络的层数")])]),s._v(" "),a("h2",{attrs:{id:"神经网络的训练"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#神经网络的训练"}},[s._v("#")]),s._v(" 神经网络的训练")]),s._v(" "),a("ul",[a("li",[s._v("给大量输入和输出，算出神经网络里所有神经元的权重、偏置，然后给定新的输入，可以算出新的 输出")]),s._v(" "),a("li",[s._v("在机器学习里输入输出被称为特征和标签，大量输入输出被称为训练集")])]),s._v(" "),a("h3",{attrs:{id:"如何训练神经网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何训练神经网络"}},[s._v("#")]),s._v(" 如何训练神经网络")]),s._v(" "),a("ol",[a("li",[s._v("初始化：随机生成一些权重和偏置")]),s._v(" "),a("li",[s._v("计算损失：给定特征，计算出标签，得到它与真实标签差得多远")]),s._v(" "),a("li",[s._v("优化：微调权重和偏置，使损失变小")])]),s._v(" "),a("h3",{attrs:{id:"前向传播与反向传播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前向传播与反向传播"}},[s._v("#")]),s._v(" 前向传播与反向传播")]),s._v(" "),a("p",[s._v("前向传播：将训练数据的特征送入网络，得到标签\n反向传播：计算损失并优化")]),s._v(" "),a("h3",{attrs:{id:"如何计算损失"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何计算损失"}},[s._v("#")]),s._v(" 如何计算损失")]),s._v(" "),a("p",[s._v("使用损失函数")]),s._v(" "),a("h2",{attrs:{id:"tensorflow-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tensorflow-js"}},[s._v("#")]),s._v(" Tensorflow.js")]),s._v(" "),a("ul",[a("li",[s._v("一个使用 Javascript 实现的机器学习库")]),s._v(" "),a("li",[s._v("可以直接在浏览器和 node.js 中使用机器学习技术")])]),s._v(" "),a("h3",{attrs:{id:"tensorflow-js-具体功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tensorflow-js-具体功能"}},[s._v("#")]),s._v(" Tensorflow.js 具体功能")]),s._v(" "),a("ul",[a("li",[s._v("运行现有模型")]),s._v(" "),a("li",[s._v("重新训练现有模型")]),s._v(" "),a("li",[s._v("使用 javascript 开发机器学习模型")])]),s._v(" "),a("h3",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),a("p",[a("strong",[s._v("浏览器使用")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("yarn add @tensorflow/tfjs\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" tf "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@tensorflow/tfjs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" tf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tensor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("node 端使用")])]),s._v(" "),a("p",[s._v("可以直接像浏览器一样安装使用，但是性能会较慢")]),s._v(" "),a("p",[s._v("绑定 c++加速，但是安装会麻烦一些")]),s._v(" "),a("p",[s._v("全局安装一些前置")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("yarn add node-gyp windows-build-tools@4.0.0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("安装完之后在本地安装(要安装1.2.3版本，否则会报错)")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("yarn add @tensorflow/tfjs-node@1.2.3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("使用 c++高速版本")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" tf "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@tensorflow/tfjs-node"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" tf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tensor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"神经网络数据结构设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#神经网络数据结构设计"}},[s._v("#")]),s._v(" 神经网络数据结构设计")]),s._v(" "),a("ul",[a("li",[s._v("神经网络的每一层要存储N维数据")]),s._v(" "),a("li",[s._v("N层的For循环运算")]),s._v(" "),a("li",[s._v("Tensor(张量)作为高维数据结构完美解决以上问题")])])])}),[],!1,null,null,null);t.default=r.exports}}]);