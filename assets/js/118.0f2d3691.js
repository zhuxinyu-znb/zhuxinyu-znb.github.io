(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{321:function(s,a,t){"use strict";t.r(a);var n=t(0),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"《代码里的世界观》"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#《代码里的世界观》"}},[s._v("#")]),s._v(" 《代码里的世界观》")]),s._v(" "),t("p",[s._v("读完《代码里的世界观》，作者是名工作十几年的资深架构师，书中主要使用 C# 语法来讲解案例，对编程的内功，以及怎么做好项目架构，都有很深入的认识。")]),s._v(" "),t("h2",{attrs:{id:"面向对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[s._v("#")]),s._v(" 面向对象")]),s._v(" "),t("p",[s._v("面向对象已经听了很多次了，需要理解的概念很多，但主要还是由这三大特征所衍生的：封装，继承，多态。")]),s._v(" "),t("p",[s._v("封装：能让一对数据和方法有机的组合在一起，为继承和多态提供基础。")]),s._v(" "),t("p",[s._v("继承：为了节省公共代码，为多态提供基础。")]),s._v(" "),t("p",[s._v("多态（抽象的基石）：在编译和运行时支持，让程序员实现面向抽象编程，面向接口编程。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),s._v(" tiger "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Tiger")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),s._v(" cat "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Cat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AnimalRun")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),s._v(" animal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    animal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此处在你定义的时候并不知道有多少种动物，只有运行时才知道")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AnimalRun")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("tiger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AnimalRun")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h3",{attrs:{id:"六大基本法则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六大基本法则"}},[s._v("#")]),s._v(" 六大基本法则")]),s._v(" "),t("ul",[t("li",[s._v("单一职责原则——SRP：一个类只做一件事情，不要多管。")]),s._v(" "),t("li",[s._v("开闭原则——OCP：一旦类定义完成以后，如果要修改类，保证只做扩展，不要修改。")]),s._v(" "),t("li",[s._v("里式替换原则——LSP：凡是用到父类的地方，都可以用子类来代替，不要去修改父类的属性和方法。")]),s._v(" "),t("li",[s._v("依赖倒置原则——DIP：高层模块不应该依赖底层模块，两者都应该依赖其抽象，抽象不应该依赖细节，细节应该依赖抽象")]),s._v(" "),t("li",[s._v("接口隔离原则——ISP：类间的依赖关系应该建立在最小的接口上。")]),s._v(" "),t("li",[s._v("迪米特原则——LOD：一个对象应该对其他对象保持最小的了解。高内聚，低耦合。")])]),s._v(" "),t("p",[s._v("开发时注意事项：")]),s._v(" "),t("ul",[t("li",[s._v("优先降低复杂度，尽量降低耦合度。")]),s._v(" "),t("li",[s._v("使用单一职责原则，开闭原则，里式替换原则，降低复杂度。")]),s._v(" "),t("li",[s._v("使用迪米特法则降低耦合度。")]),s._v(" "),t("li",[s._v("使用依赖倒置原则，消除可以没有的耦合。")])]),s._v(" "),t("h2",{attrs:{id:"数据驱动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据驱动"}},[s._v("#")]),s._v(" 数据驱动")]),s._v(" "),t("p",[s._v("如果有多层 if else 嵌套，不妨把条件判断放在放在一个单独的数据池中进行管理。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xxx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" xxx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'456'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSomeThing")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可以修改为，如果要新增一项，直接在数据中增加即可")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" currentNumber "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'456'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("includes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xxx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSomeThing")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"对象之间的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象之间的关系"}},[s._v("#")]),s._v(" 对象之间的关系")]),s._v(" "),t("ul",[t("li",[s._v("继承：父子关系")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("组合：朋友关系")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("ul",[t("li",[s._v("依赖：夫妻关系")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("继承，组合和依赖所代表的关系，其紧密程度是一次降低的。关系越松，越能产生灵活性。")]),s._v(" "),t("h2",{attrs:{id:"处理异常"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#处理异常"}},[s._v("#")]),s._v(" 处理异常")]),s._v(" "),t("p",[s._v("我们会使用 try catch 来捕获程序错误，可以把处理错误的逻辑和主体逻辑在空间上分离，让主体逻辑更加清晰，简介，便于阅读。")]),s._v(" "),t("p",[s._v("1、尽早检查并抛出异常，不要运行到函数深处再被动抛出。")]),s._v(" "),t("p",[s._v("2、不要加大 catch 的负担，"),t("code",[s._v("只处理意料之外的异常")]),s._v("，意料之内的应该自己写容错。")]),s._v(" "),t("p",[s._v("3、避免 try catch 嵌套，避免滥用。")]),s._v(" "),t("h2",{attrs:{id:"编写单元测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写单元测试"}},[s._v("#")]),s._v(" 编写单元测试")]),s._v(" "),t("p",[s._v("1、这些测试代码写的再多都不会有副作用，因为丝毫不会影响主程序，塔有的只是正面的验证作用。")]),s._v(" "),t("p",[s._v("2、一旦检验出了 bug，是最小代价的修复问题。")]),s._v(" "),t("p",[s._v("3、进行重构时，大量个测试用例是宝贵的财富，可以验证每一步重构的正确性，让重构的风险降到最低。")]),s._v(" "),t("p",[s._v("4、测试用例就像一把把的尖刀，吧猪呢个工程配剖析为一个一个独立的个体。尖刀都是插在各个部分的连接之处。好比屠牛高手依照牛的骨架结构进行解牛。")]),s._v(" "),t("p",[s._v("你可以站在一个旁观者的角度，深层次分析代码的优劣，可以提高你的编程水平。")]),s._v(" "),t("h2",{attrs:{id:"static-的特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#static-的特性"}},[s._v("#")]),s._v(" static 的特性")]),s._v(" "),t("p",[s._v("1、对代码的直接访问")]),s._v(" "),t("p",[s._v("2、隔离性和游离性：对类实例隔离，对引用游离。")]),s._v(" "),t("p",[s._v("3、将类名淡化，突出参数的重要性。")]),s._v(" "),t("h3",{attrs:{id:"实现案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现案例"}},[s._v("#")]),s._v(" 实现案例")]),s._v(" "),t("p",[s._v("1、编写工具包函数")]),s._v(" "),t("p",[s._v("2、单例模式")]),s._v(" "),t("p",[s._v("3、实现类扩展")]),s._v(" "),t("p",[s._v("只有可以被拆卸的功能，才适合放在类扩展中。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PersonExtension")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Drive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" person"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Car")]),s._v(" car"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("4、构建上层建筑")]),s._v(" "),t("h2",{attrs:{id:"使用隐世约定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用隐世约定"}},[s._v("#")]),s._v(" 使用隐世约定")]),s._v(" "),t("p",[s._v("隐世约定能给架构带来极大的灵活性，而且能够应用在各个层级的模块上。善用隐世约定的热是处理模块链接、数据传输的高手。")]),s._v(" "),t("p",[s._v("1、数据打包")]),s._v(" "),t("p",[s._v("2、数据传输")]),s._v(" "),t("p",[s._v("3、数据解包")]),s._v(" "),t("p",[s._v("例如，有一个状态为："),t("code",[s._v("可读")]),s._v("，"),t("code",[s._v("可写")]),s._v("，"),t("code",[s._v("不可读")]),s._v("，"),t("code",[s._v("不可写")]),s._v("的数据，可以用一个二进制数字表示。")]),s._v(" "),t("h2",{attrs:{id:"多线程方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多线程方案"}},[s._v("#")]),s._v(" 多线程方案")]),s._v(" "),t("p",[s._v("1、互斥：相互竞争")]),s._v(" "),t("p",[s._v("2、同步：相互合作")]),s._v(" "),t("p",[s._v("3、异步：各忙各的")]),s._v(" "),t("h2",{attrs:{id:"程序员应该具有的能力"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#程序员应该具有的能力"}},[s._v("#")]),s._v(" 程序员应该具有的能力")]),s._v(" "),t("ul",[t("li",[s._v("逻辑推理能力")]),s._v(" "),t("li",[s._v("快速学习上手的能力")]),s._v(" "),t("li",[s._v("架构能力，包括提炼和总结的能力")]),s._v(" "),t("li",[s._v("定位 bug 的破案能力")]),s._v(" "),t("li",[s._v("沟通能力，包括英语能力")])])])}),[],!1,null,null,null);a.default=e.exports}}]);